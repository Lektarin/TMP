1. Диаграмма последовательностей:

@startuml
actor Пользователь
participant Банкомат
database БанковскийСервер

Пользователь -> Банкомат: Вставить карту
activate Банкомат

Банкомат -> БанковскийСервер: Отправить запрос на проверку карты
activate БанковскийСервер
БанковскийСервер --> Банкомат: Проверка карты
deactivate БанковскийСервер

Банкомат -> Пользователь: Введите пин-код
Пользователь -> Банкомат: Ввод пин-кода

Банкомат -> БанковскийСервер: Отправить запрос на проверку пин-кода
activate БанковскийСервер
БанковскийСервер --> Банкомат: Проверка пин-кода
deactivate БанковскийСервер

Банкомат -> Пользователь: Выберите действие
Пользователь -> Банкомат: Выбор действия

alt Снять наличные
    Банкомат -> БанковскийСервер: Отправить запрос на снятие наличных
    activate БанковскийСервер
    БанковскийСервер --> Банкомат: Проверка баланса и выдача наличных
    deactivate БанковскийСервер
    Банкомат -> Пользователь: Получить наличные
else Справка об остатке
    Банкомат -> БанковскийСервер: Отправить запрос на получение справки об остатке
    activate БанковскийСервер
    БанковскийСервер --> Банкомат: Получение справки об остатке
    deactivate БанковскийСервер
    Банкомат -> Пользователь: Получить справку
end

Пользователь -> Банкомат: Забрать карту
Банкомат -> БанковскийСервер: Отправить запрос на завершение сессии
activate БанковскийСервер
БанковскийСервер --> Банкомат: Сессия завершена
deactivate БанковскийСервер
deactivate Банкомат
@enduml

2. Диаграмма развертывания:

@startuml
node "БД Банка" as BankDB {
    component "БД"
}
node "Сервер Банка" as BankServer {
    component "Bank Application" as BankApp
    component "Bank API" as BankApi
    BankApp --> БД : запрос на данные клиента
}
node "Банкомат" as ATM {
    component "ATM Application" as ATMApp
    component "ATM UI" as ATMUi
    
    node "Диспенсер" as Dispenser
    node "Клавиатура" as Keyboard
    node "Считыватель карт" as CardReader
    node "Дисплей" as Display
    node "Принтер" as Printer
    
    ATMApp --> BankApi : запрос на проведение транзакции
    ATMApp --> BankApp : запрос на обработку транзакции
    
    ATM --> Dispenser
    ATM --> Keyboard
    ATM --> CardReader
    ATM --> Display
    ATM --> Printer
}
node "Сеть" as Network {
    node "Модем" as Modem
    ATM --> Modem
    Modem --> BankServer
    Dispenser --> Modem
    Keyboard --> Modem
    CardReader --> Modem
    Display --> Modem
    Printer --> Modem
}
ATM --> BankServer
BankServer --> BankDB
BankDB --> BankApp
@enduml
